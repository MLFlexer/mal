function mal {
	
	# Check if the user has provided a help option or no arguments
	if [[ "$1" = "-h" ]] || [[ "$1" = "--help" ]] || [[ "$1" = "-help" ]] || [[ $# -eq 0 ]]; then
		# Display usage information
		echo "Usage: mal [OPTION]... [ALIAS_NAME] [ALIAS_COMMAND]..."
		echo "Create, delete, change or execute aliases interactively."
		echo ""
		echo "Options:"
		echo "  -h, --help             display this help and exit"
		echo "  -e                     execute an alias interactively"
		echo "  -d                     delete an alias interactively"
		echo "  -dn ALIAS_NAME         delete an alias by name"
		echo "  -r OLD_ALIAS_NAME NEW_ALIAS_NAME"
    echo "                         rename an existing alias"
		echo "  -c ALIAS_NAME COMMAND  change the command for an existing alias"
		echo ""
		return 0
	fi

	# Execute an alias interactively if the -e option is used
	if [[ $1 = "-e" ]]; then
		# Use fzf to allow the user to select an alias from the aliases file
		local alias_to_execute=$(cut -d' ' -f2- $ALIASES_FILE | fzf)
		# Check if the user cancelled the selection
		if [[ $? -eq 130 ]]; then
			return 1
		fi
		echo Executing alias: $alias_to_execute
		# Execute the selected alias
		eval ${alias_to_execute%%=*}
		return 0

	# Delete an alias interactively if the -d option is used
	elif [[ $1 = -d ]]; then
		# Use fzf to allow the user to select an alias from the aliases file
		local alias_to_delete=$(cut -d' ' -f2- $ALIASES_FILE | fzf)
		# Check if the user cancelled the selection
		if [[ $? -eq 130 ]]; then
			return 1
		fi
		echo Deleted alias: $alias_to_delete
		# Delete the selected alias from the aliases file
		sed -i "/^alias ${alias_to_delete%%=*}=/d" $ALIASES_FILE
		unalias ${alias_to_delete%%=*}

	# Delete an alias by name if the -dn option is used
	elif [[ $1 = -dn ]]; then
		local alias_to_delete=$2
		local line_with_alias=$(grep "$2=" $ALIASES_FILE)
		# Check if the alias exists in the aliases file
		if [[ -z "$line_with_alias" ]]; then
			echo No alias with the name $2 found.
			return 2
		fi
		echo Deleted alias: $alias_to_delete
		# Delete the selected alias from the aliases file
		sed -i "/^alias ${alias_to_delete%%=*}=/d" $ALIASES_FILE
		unalias ${alias_to_delete%%=*}
  elif [[ $1 = "-r" ]]; then
      # Rename an existing alias
      if [[ -z "$2" || -z "$3" ]]; then
          echo "Usage: mal -r OLD_ALIAS_NAME NEW_ALIAS_NAME"
          return 1
      fi
      local old_alias_name=$2
      local new_alias_name=$3
      local line_with_alias=$(grep "^alias ${old_alias_name}=" $ALIASES_FILE)
      if [[ -z "$line_with_alias" ]]; then
          echo "No alias with the name $old_alias_name found."
          return 2
      fi
      echo Renaming alias from $old_alias_name to $new_alias_name
      sed -i "s/^alias ${old_alias_name}=/alias ${new_alias_name}=/g" $ALIASES_FILE
      unalias ${old_alias_name}
  elif [[ $1 = "-c" ]]; then
      # Change the command associated with an existing alias
      local alias_to_change=$2
      local new_command="${@:3}"
      local line_with_alias=$(grep "$alias_to_change=" $ALIASES_FILE)
      if [[ -z "$line_with_alias" ]]; then
          echo No alias with the name $alias_to_change found.
          return 2
      fi
      echo Changing command for alias $alias_to_change to \"$new_command\"
      sed -i "/^alias ${alias_to_change}=/{s/=.*/=\"$new_command\"/}" $ALIASES_FILE
  else
      # Add a new alias
      local line_with_alias=$(grep "$1=" $ALIASES_FILE)
      if [[ ! -z "$line_with_alias" ]]; then
          echo Alias found: $line_with_alias
          echo change alias by using the -c flag.
          return 3
      fi

      local lh="alias $1"
      local rh=\"${@:2}\"
      local alias_str="$lh=$rh"

      echo $alias_str >>$ALIASES_FILE
      echo added \"$alias_str\" to .aliases
  fi

  # Reload aliases
  source $ALIASES_FILE
}
